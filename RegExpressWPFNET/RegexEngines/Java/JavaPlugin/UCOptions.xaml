<UserControl x:Class="JavaPlugin.UCOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JavaPlugin"
             xmlns:ui="clr-namespace:RegExpressLibrary.UI;assembly=RegExpressLibrary"
             mc:Ignorable="d" 
             d:DesignHeight="313.765" d:DesignWidth="758.661" 
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <Style TargetType="ui:CheckboxWithNote">
            <EventSetter Event="Changed" Handler="CheckBox_Changed"/>
        </Style>
        <Style TargetType="TextBox">
            <EventSetter Event="TextChanged" Handler="TextBox_Changed"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel Orientation="Vertical" VerticalAlignment="Top">
            <StackPanel Orientation="Horizontal" Margin="0 0 0 4">
                <StackPanel.LayoutTransform>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                </StackPanel.LayoutTransform>
                <Label Content="Package:" Target="{Binding ElementName=cbxPackage}" Padding="0 2 4 2" />
                <ComboBox x:Name="cbxPackage" SelectedValuePath="Tag" SelectedValue="{Binding Package, FallbackValue='regex'}" VerticalAlignment="Center" MinWidth="90" SelectionChanged="cbxPackage_SelectionChanged">
                    <!-- //TODO: put the version programmatically -->
                    <ComboBoxItem Tag ="regex" Content="java.util.regex" IsSelected="True" />
                    <ComboBoxItem Tag ="re2j" Content="com.google.re2j" IsSelected="false" />
                </ComboBox>
            </StackPanel>

            <ui:CheckboxWithNote x:Name="CANON_EQ" Prop="CANON_EQ" Note="canonical equivalence"/>
            <ui:CheckboxWithNote Prop="CASE_INSENSITIVE" Note="(i) case-insensitive matching"/>
            <ui:CheckboxWithNote x:Name="COMMENTS" Prop="COMMENTS" Note="(x) whitespace and comments in pattern"/>
            <ui:CheckboxWithNote Prop="DOTALL" Note="(s) “.” matches any character, including a line terminator"/>
            <ui:CheckboxWithNote x:Name="LITERAL" Prop="LITERAL" Note="literal parsing of the pattern"/>
            <ui:CheckboxWithNote Prop="MULTILINE" Note="(m) “^” and “$” match just after or just before, respectively, a line terminator or the end of the input"/>
            <ui:CheckboxWithNote x:Name="UNICODE_CASE" Prop="UNICODE_CASE" Note="(u) Unicode-aware case folding"/>
            <ui:CheckboxWithNote x:Name="UNICODE_CHARACTER_CLASS" Prop="UNICODE_CHARACTER_CLASS" Note="(U) Unicode version of Predefined character classes and POSIX character classes"/>
            <ui:CheckboxWithNote x:Name="UNIX_LINES" Prop="UNIX_LINES" Note="(d) only the “\n” line terminator is recognized in the behavior of “.”, “^”, and “$”"/>
            <ui:CheckboxWithNote x:Name="DISABLE_UNICODE_GROUPS" Prop="DISABLE_UNICODE_GROUPS" Note="Unicode groups (e.g. \p{Greek}) will be syntax errors"/>
            <ui:CheckboxWithNote x:Name="LONGEST_MATCH" Prop="LONGEST_MATCH" Note="matches longest possible string"/>

            <StackPanel x:Name="panelRegion" Orientation="Vertical" VerticalAlignment="Top">

                <Label Margin="0 4 0 4" Padding="0">
                    <Italic>Region</Italic>
                </Label>

                <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 2 0 4">
                    <Grid.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.LayoutTransform>
                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="0 2 4 2"/>
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBlock" x:Key="note">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="{x:Static SystemColors.ControlTextBrush}"/>
                            <Setter Property="Opacity" Value="0.70"/>
                            <Setter Property="Margin" Value="4 0"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="77"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=start}">start:</Label>
                    <TextBox x:Name="start" Grid.Column="1" Grid.Row="0" Text="{Binding regionStart, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Grid.Column="2" Grid.Row="0" Text="– the index to start searching at (inclusive)" Style="{StaticResource note}" />

                    <Label Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=end}">end:</Label>
                    <TextBox x:Name="end" Grid.Column="1" Grid.Row="1" Text="{Binding regionEnd, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Grid.Column="2" Grid.Row="1" Text="– the index to end searching at (exclusive)" Style="{StaticResource note}" />
                </Grid>

                <ui:CheckboxWithNote Prop="useAnchoringBounds" Note="the boundaries of this region match anchors such as ^ and $"/>
                <ui:CheckboxWithNote Prop="useTransparentBounds" Note="the boundaries of this region are transparent to lookahead, lookbehind, and boundary matching constructs"/>

            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
