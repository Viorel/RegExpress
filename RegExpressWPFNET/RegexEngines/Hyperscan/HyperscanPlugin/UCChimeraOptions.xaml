<UserControl x:Class="HyperscanPlugin.UCChimeraOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HyperscanPlugin"
             xmlns:ui="clr-namespace:RegExpressLibrary.UI;assembly=RegExpressLibrary"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="650" 
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <Style TargetType="ui:CheckboxWithNote">
            <EventSetter Event="Changed" Handler="CheckBox_Changed"/>
        </Style>
        <Style TargetType="TextBox">
            <EventSetter Event="TextChanged" Handler="TextBox_TextChanged"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel VerticalAlignment="Top">
            <Label Margin="0 4 0 1" Padding="0">
                <Italic>Flags</Italic>
            </Label>

            <ui:CheckboxWithNote Prop="CH_FLAG_CASELESS" Note="Case-insensitive matching"/>
            <ui:CheckboxWithNote Prop="CH_FLAG_DOTALL" Note="Matching a “.” will not exclude newlines"/>
            <ui:CheckboxWithNote Prop="CH_FLAG_MULTILINE" Note="“^” and “$” anchors match any newlines in data"/>
            <ui:CheckboxWithNote Prop="CH_FLAG_SINGLEMATCH" Note="Only one match will be returned"/>
            <ui:CheckboxWithNote Prop="CH_FLAG_UTF8" Note="Treat this pattern as a sequence of UTF-8 characters"/>
            <ui:CheckboxWithNote Prop="CH_FLAG_UCP" Note="Use Unicode properties for character classes"/>

            <Label Margin="0 6 0 0" Padding="0">
                <Italic>Additional parameters</Italic>
            </Label>

            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 4 0 6">
                <Grid.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.LayoutTransform>
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="0 2 4 2"/>
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{x:Static SystemColors.ControlTextBrush}"/>
                        <Setter Property="Opacity" Value="0.70"/>
                        <Setter Property="Margin" Value="4 0"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="44"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=ml}">Match limit:</Label>
                <TextBox x:Name="ml" Grid.Column="1" Grid.Row="0" Text="{Binding MatchLimit, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Column="2" Grid.Row="0" Text="– Backtracking limit" />

                <Label Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=maxo}">Recursion limit:</Label>
                <TextBox x:Name="rl" Grid.Column="1" Grid.Row="1" Text="{Binding MatchLimitRecursion, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Column="2" Grid.Row="1" Text="– Recursion depth limit" />
            </Grid>

            <StackPanel Orientation="Horizontal" Margin="0 6 0 6">
                <StackPanel.LayoutTransform>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                </StackPanel.LayoutTransform>
                <Label Content="Mode:" Target="{Binding ElementName=cbxMode}" Padding="0 2 3 2"/>
                <ComboBox x:Name="cbxMode" SelectedValuePath="Tag" SelectedValue="{Binding Mode, FallbackValue='CH_MODE_GROUPS'}" VerticalAlignment="Center" SelectionChanged="cbxMode_SelectionChanged" MinWidth="44" Margin="3 0 0 0">
                    <ComboBoxItem Tag ="CH_MODE_NOGROUPS" Content="{Binding Tag, RelativeSource={RelativeSource Self}}" />
                    <ComboBoxItem Tag ="CH_MODE_GROUPS" Content="{Binding Tag, RelativeSource={RelativeSource Self}}"  IsSelected="True"/>
                </ComboBox>
            </StackPanel>

        </StackPanel>
    </Grid>
</UserControl>
