<UserControl x:Class="RustPlugin.UCOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RustPlugin"
             xmlns:ui="clr-namespace:RegExpressLibrary.UI;assembly=RegExpressLibrary"
             mc:Ignorable="d" 
             d:DesignHeight="407.075" d:DesignWidth="489.6" 
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <Style TargetType="ui:CheckboxWithNote">
            <EventSetter Event="Changed" Handler="CheckBox_Changed"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0 0 0 4">
                <StackPanel.LayoutTransform>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                </StackPanel.LayoutTransform>
                <Label Content="Crate:" Target="{Binding ElementName=cbxCrate}" Padding="0 2 4 2" MinWidth="40"/>
                <ComboBox x:Name="cbxCrate" SelectedValuePath="Tag" SelectedValue="{Binding crate, FallbackValue='regex'}" VerticalAlignment="Center" SelectionChanged="cbxCrate_SelectionChanged" MinWidth="44">
                    <ComboBoxItem Tag ="regex" Content="regex 1.11.1" IsSelected="True" />
                    <ComboBoxItem Tag ="regex_lite" Content="regex_lite 0.1.6" />
                    <ComboBoxItem Tag ="fancy_regex" Content="fancy_regex 0.14.0" />
                    <ComboBoxItem Tag ="regress" Content="regress 0.10.3" />
                </ComboBox>
            </StackPanel>

            <StackPanel x:Name="pnlStruct" Orientation="Horizontal" Margin="0 0 0 4">
                <StackPanel.LayoutTransform>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                </StackPanel.LayoutTransform>
                <Label Content="Struct:" Target="{Binding ElementName=cbxStruct}" Padding="0 2 4 2" MinWidth="40"/>
                <ComboBox x:Name="cbxStruct" SelectedValuePath="Tag" SelectedValue="{Binding struct, FallbackValue='Regex'}" VerticalAlignment="Center" SelectionChanged="cbxStruct_SelectionChanged" MinWidth="44">
                    <ComboBoxItem Tag ="Regex" Content="{Binding Tag, RelativeSource={RelativeSource Self}}" IsSelected="True" />
                    <ComboBoxItem Tag ="RegexBuilder" Content="{Binding Tag, RelativeSource={RelativeSource Self}}" />
                </ComboBox>
            </StackPanel>

            <StackPanel x:Name="pnlRegexBuilderOptions">

                <ui:CheckboxWithNote x:Name="chbx_case_insensitive" Prop="case_insensitive" Note="(i) match both upper case and lower case variants"/>
                <ui:CheckboxWithNote x:Name="chbx_multi_line" Prop="multi_line" Note="(m) “^” matches the beginning of lines, “$” matches the end of lines"/>
                <ui:CheckboxWithNote x:Name="chbx_dot_matches_new_line" Prop="dot_matches_new_line" Note="(s) “.” matches anything"/>
                <ui:CheckboxWithNote x:Name="chbx_crlf" Prop="crlf" Note="(R) treat both “\r” and “\n” as line terminator"/>
                <ui:CheckboxWithNote x:Name="chbx_swap_greed" Prop="swap_greed" Note="(U) “a*” finds shortest match, “a*?” finds longest match"/>
                <ui:CheckboxWithNote x:Name="chbx_ignore_whitespace" Prop="ignore_whitespace" Note="(x) ignore whitespaces, allow “#” to start line comments"/>
                <ui:CheckboxWithNote x:Name="chbx_unicode" Prop="unicode" Note="(u) match Unicode characters"/>
                <ui:CheckboxWithNote x:Name="chbx_octal" Prop="octal" Note="support octal syntax"/>

                <StackPanel Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style TargetType="Label">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="0 2 4 2"/>
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBlock" x:Key="note">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="{x:Static SystemColors.ControlTextBrush}"/>
                            <Setter Property="Opacity" Value="0.70"/>
                            <Setter Property="Margin" Value="4 0"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </StackPanel.Resources>

                    <Grid x:Name="pnlRegexCrateLimits" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 6 0 0" Visibility="Collapsed" d:Visibility="Visible">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="44"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=sl}">size__limit:</Label>
                        <TextBox x:Name="sl" Grid.Column="1" Grid.Row="0" Text="{Binding size_limit, UpdateSourceTrigger=PropertyChanged}" TextChanged="tb_TextChanged"/>
                        <TextBlock Grid.Column="2" Grid.Row="0" Text="– byte size limit of compiled regular expression" Style="{StaticResource note}" />

                        <Label Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=dsl}">dfa__size__limit:</Label>
                        <TextBox x:Name="dsl" Grid.Column="1" Grid.Row="1" Text="{Binding dfa_size_limit, UpdateSourceTrigger=PropertyChanged}" TextChanged="tb_TextChanged"/>
                        <TextBlock Grid.Column="2" Grid.Row="1" Text="– byte size of DFA cache" Style="{StaticResource note}" />

                        <Label Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=nl}">nest__limit:</Label>
                        <TextBox x:Name="nl" Grid.Column="1" Grid.Row="2" Text="{Binding nest_limit, UpdateSourceTrigger=PropertyChanged}" TextChanged="tb_TextChanged"/>
                        <TextBlock Grid.Column="2" Grid.Row="2" Text="– nest depth" Style="{StaticResource note}" />

                    </Grid>

                    <Grid x:Name="pnlFancyRegexCrateLimits" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 6 0 0" Visibility="Collapsed" d:Visibility="Visible">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="44"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=bl}">backtrack__limit:</Label>
                        <TextBox x:Name="bl" Grid.Column="1" Grid.Row="0" Text="{Binding backtrack_limit, UpdateSourceTrigger=PropertyChanged}" TextChanged="tb_TextChanged"/>
                        <TextBlock Grid.Column="2" Grid.Row="0" Text="– limit for how many times backtracking should be attempted" Style="{StaticResource note}" />

                        <Label Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=delsl}">delegate__size__limit:</Label>
                        <TextBox x:Name="delsl" Grid.Column="1" Grid.Row="1" Text="{Binding delegate_size_limit, UpdateSourceTrigger=PropertyChanged}" TextChanged="tb_TextChanged"/>
                        <TextBlock Grid.Column="2" Grid.Row="1" Text="– approximate size limit of compiled regular expression" Style="{StaticResource note}" />

                        <Label Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=deldsl}">delegate__dfa__size__limit:</Label>
                        <TextBox x:Name="deldsl" Grid.Column="1" Grid.Row="2" Text="{Binding delegate_dfa_size_limit, UpdateSourceTrigger=PropertyChanged}" TextChanged="tb_TextChanged"/>
                        <TextBlock Grid.Column="2" Grid.Row="2" Text="– approximate size of cache used by DFA" Style="{StaticResource note}" />

                    </Grid>

                </StackPanel>
            </StackPanel>

            <StackPanel x:Name="pnlRegressOptions" Orientation="Vertical" Visibility="Collapsed" d:Visibility="Visible">
                <ui:CheckboxWithNote Prop="case_insensitive" Text="icase" Note="(i) case-insensitive"/>
                <ui:CheckboxWithNote Prop="multi_line" Text="multiline" Note="(m) “^” and “$” match at line separators"/>
                <ui:CheckboxWithNote Prop="dot_matches_new_line" Text="dot_all" Note="(s) “.” matches at line separators as well as any other character"/>
                <ui:CheckboxWithNote Prop="no_opt" Note="disable regex IR passes"/>
                <ui:CheckboxWithNote Prop="unicode" Note="(u) Unicode regex"/>
                <ui:CheckboxWithNote Prop="unicode_sets" Note="(v) UnicodeSets regex"/>

            </StackPanel>
        </StackPanel>

    </Grid>
</UserControl>
