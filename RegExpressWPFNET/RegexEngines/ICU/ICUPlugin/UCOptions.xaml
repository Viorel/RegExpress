<UserControl x:Class="ICUPlugin.UCOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICUPlugin"
             xmlns:ui="clr-namespace:RegExpressLibrary.UI;assembly=RegExpressLibrary"
             mc:Ignorable="d" 
             d:DesignHeight="278.4" d:DesignWidth="879.2" 
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <Style TargetType="ui:CheckboxWithNote">
            <EventSetter Event="Changed" Handler="CheckBox_Changed"/>
        </Style>
        <Style TargetType="TextBox">
            <EventSetter Event="TextChanged" Handler="TextBox_Changed"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel>

            <ui:CheckboxWithNote Prop="UREGEX_CASE_INSENSITIVE" Note="enable case insensitive matching"/>
            <ui:CheckboxWithNote Prop="UREGEX_COMMENTS" Note="allow white space and comments within patterns"/>
            <ui:CheckboxWithNote Prop="UREGEX_DOTALL" Note="“.” matches line terminators, otherwise “.” matching stops at line end"/>
            <ui:CheckboxWithNote Prop="UREGEX_LITERAL" Note="treat the entire pattern as a literal string; metacharacters or escape sequences will be given no special meaning"/>
            <ui:CheckboxWithNote Prop="UREGEX_MULTILINE" Note="control behavior of “$” and “^”; recognize line terminators within string, otherwise, match only at start and end of input string"/>
            <ui:CheckboxWithNote Prop="UREGEX_UNIX_LINES" Note="Unix-only line endings; only “\u000a” is recognized as a line ending in the behavior of “.”, “^”, and “$”"/>
            <ui:CheckboxWithNote Prop="UREGEX_UWORD" Note="uses the Unicode TR 29 definition of word boundaries"/>
            <ui:CheckboxWithNote Prop="UREGEX_ERROR_ON_UNKNOWN_ESCAPES" Note="error on unrecognized backslash escapes"/>

            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 4 0 4">
                <Grid.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.LayoutTransform>
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="0 2 4 2"/>
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="TextBlock" x:Key="note">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{x:Static SystemColors.ControlTextBrush}"/>
                        <Setter Property="Opacity" Value="0.70"/>
                        <Setter Property="Margin" Value="4 0"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="77"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=limit}">limit:</Label>
                <TextBox x:Name="limit" Grid.Column="1" Grid.Row="0" Text="{Binding limit, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Column="2" Grid.Row="0" Text="– maximum steps of the match engine" Style="{StaticResource note}" />

            </Grid>

            <Label Margin="0 4 0 4" Padding="0">
                <Italic>Region</Italic>
            </Label>

            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 2 0 4">
                <Grid.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.LayoutTransform>
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="0 2 4 2"/>
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="TextBlock" x:Key="note">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{x:Static SystemColors.ControlTextBrush}"/>
                        <Setter Property="Opacity" Value="0.70"/>
                        <Setter Property="Margin" Value="4 0"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="77"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=start}">start:</Label>
                <TextBox x:Name="start" Grid.Column="1" Grid.Row="0" Text="{Binding regionStart, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Column="2" Grid.Row="0" Text="– the (native) index to begin searches at" Style="{StaticResource note}" />

                <Label Grid.Column="0" Grid.Row="1" Target="{Binding ElementName=end}">end:</Label>
                <TextBox x:Name="end" Grid.Column="1" Grid.Row="1" Text="{Binding regionEnd, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Column="2" Grid.Row="1" Text="– the index to end searches at (exclusive)" Style="{StaticResource note}" />
            </Grid>

            <ui:CheckboxWithNote Prop="useAnchoringBounds" Note="pattern anchors such as ^ and $ will match at the start and end of the region"/>
            <ui:CheckboxWithNote Prop="useTransparentBounds" Note="the boundaries of this region are transparent to lookahead, lookbehind, and boundary matching constructs"/>




        </StackPanel>
    </Grid>
</UserControl>
