<UserControl x:Class="PythonPlugin.UCOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PythonPlugin"
             xmlns:ui="clr-namespace:RegExpressLibrary.UI;assembly=RegExpressLibrary"
             mc:Ignorable="d" 
             d:DesignHeight="344.383" d:DesignWidth="856.261" 
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <Style TargetType="ui:CheckboxWithNote">
            <EventSetter Event="Changed" Handler="CheckBox_Changed"/>
        </Style>
        <Style TargetType="TextBox">
            <EventSetter Event="TextChanged" Handler="TextBox_Changed"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel VerticalAlignment="Top">

            <StackPanel Orientation="Horizontal" Margin="0">
                <StackPanel.LayoutTransform>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                </StackPanel.LayoutTransform>
                <Label Content="Module:" Target="{Binding ElementName=cbxModule}" VerticalAlignment="Center" Padding="0 2 4 2"/>
                <ComboBox x:Name="cbxModule" SelectedValuePath="Tag" SelectedValue="{Binding Module, FallbackValue='regex'}" VerticalAlignment="Center" SelectionChanged="cbxModule_SelectionChanged" Margin="3 0 0 0">
                    <ComboBoxItem Tag ="re" Content="{Binding Tag, RelativeSource={RelativeSource Self}}" IsSelected="True" />
                    <ComboBoxItem Tag ="regex" Content="{Binding Tag, RelativeSource={RelativeSource Self}}" />
                </ComboBox>
            </StackPanel>

            <ui:CheckboxWithNote Prop="ASCII" Note="\w, \W, \b, \B, \d, \D, \s and \S perform ASCII-only matching" Margin="0 6 0 0"/>
            <ui:CheckboxWithNote Prop="DOTALL" Note=". matches any character, including newline"/>
            <ui:CheckboxWithNote Prop="IGNORECASE" Note="case-insensitive matching"/>
            <ui:CheckboxWithNote Prop="LOCALE" Note="\w, \W, \b, \B and case-insensitive matching dependent on current locale"/>
            <ui:CheckboxWithNote Prop="MULTILINE" Note="^ matches at the beginning of the string and at the beginning of each line; $ matches at the end of the string and at the end of each line"/>
            <ui:CheckboxWithNote Prop="VERBOSE" Note="allow spaces and comments"/>
            <StackPanel x:Name="pnlAdditional" VerticalAlignment="Top" Margin="0 6 0 0">
                <ui:CheckboxWithNote Prop="BESTMATCH" Note="best fuzzy match"/>
                <ui:CheckboxWithNote Prop="ENHANCEMATCH" Note="improve the fit after finding the first fuzzy match"/>
                <ui:CheckboxWithNote Prop="FULLCASE" Note="full case-folding when performing case-insensitive matching in Unicode"/>
                <ui:CheckboxWithNote Prop="POSIX" Note="POSIX-standard matching (leftmost longest)"/>
                <ui:CheckboxWithNote Prop="REVERSE" Note="searches backwards"/>
                <ui:CheckboxWithNote Prop="UNICODE" Note="make \w, \W, \b, \B, \d, and \D dependent on the Unicode locale"/>
                <ui:CheckboxWithNote Prop="WORD" Note="make \b and \B work with default Unicode word breaks and make ., ^ and $ work with Unicode line breaks"/>
                <ui:CheckboxWithNote Prop="VERSION0" Note="old behaviour"/>
                <ui:CheckboxWithNote Prop="VERSION1" Note="new behaviour"/>
                <ui:CheckboxWithNote Prop="overlapped" Note="permits overlapped matches" Margin="0 6 0 0"/>
                <ui:CheckboxWithNote Prop="partial" Note="check if match could be possible if the string had not been truncated"/>

                <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 4 0 4">
                    <Grid.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.LayoutTransform>
                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="0 2 4 2"/>
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBlock" x:Key="note">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="{x:Static SystemColors.ControlTextBrush}"/>
                            <Setter Property="Opacity" Value="0.70"/>
                            <Setter Property="Margin" Value="4 0"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="77"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=timeout}">timeout:</Label>
                    <TextBox x:Name="timeout" Grid.Column="1" Grid.Row="0" Text="{Binding timeout, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Grid.Column="2" Grid.Row="0" Text="– maximum duration of operations (in seconds)" Style="{StaticResource note}" />

                </Grid>

            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
