<Window x:Class="RegExpressWPFNET.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RegExpressWPFNET"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="RegExpress" Height="500" Width="800" 
        SourceInitialized="Window_SourceInitialized"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        >

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.NewTabCommand}" CanExecute="NewTabCommand_CanExecute" Executed="NewTabCommand_Execute"/>
        <CommandBinding Command="{x:Static local:MainWindow.CloseTabCommand}" CanExecute="CloseTabCommand_CanExecute" Executed="CloseTabCommand_Execute"/>
        <CommandBinding Command="{x:Static local:MainWindow.DuplicateTabCommand}" CanExecute="DuplicateTabCommand_CanExecute" Executed="DuplicateTabCommand_Execute"/>
        <CommandBinding Command="{x:Static local:MainWindow.GoToOptionsCommand}" CanExecute="GoToOptionsCommand_CanExecute" Executed="GoToOptionsCommand_Execute"/>
        <CommandBinding Command="{x:Static local:MainWindow.MoveTabLeftCommand}" CanExecute="MoveTabLeftCommand_CanExecute" Executed="MoveTabLeftCommand_Execute"/>
        <CommandBinding Command="{x:Static local:MainWindow.MoveTabRightCommand}" CanExecute="MoveTabRightCommand_CanExecute" Executed="MoveTabRightCommand_Execute"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{x:Static local:MainWindow.NewTabCommand}" Modifiers="Ctrl" Key="N"/>
        <KeyBinding Command="{x:Static local:MainWindow.CloseTabCommand}" Modifiers="Ctrl" Key="F4"/>
        <KeyBinding Command="{x:Static local:MainWindow.DuplicateTabCommand}" Modifiers="Ctrl" Key="D" />
        <KeyBinding Command="{x:Static local:MainWindow.GoToOptionsCommand}" Modifiers="" Key="F4" />
        <KeyBinding Command="{x:Static local:MainWindow.MoveTabLeftCommand}" Modifiers="Ctrl+Shift+Alt" Key="Left" />
        <KeyBinding Command="{x:Static local:MainWindow.MoveTabRightCommand}" Modifiers="Ctrl+Shift+Alt" Key="Right" />
    </Window.InputBindings>

    <Grid Margin="0 1 0 0">

        <TextBlock x:Name="textBlockInfo" Text="Loading..." TextAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="2"/>

        <TabControl x:Name="tabControl" Visibility="Visible" SelectionChanged="tabControlMain_SelectionChanged" Panel.ZIndex="1">

            <TabControl.Resources>

                <DataTemplate x:Key="TabTemplate" DataType="TabItem">
                    <DataTemplate.Triggers>
                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation 
                                        Storyboard.TargetName="TabCaption" 
                                        Storyboard.TargetProperty="Opacity" 
                                        From="0" 
                                        To="1"  
                                        Duration="00:00:01.33" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </DataTemplate.Triggers>

                    <StackPanel Orientation="Horizontal">
                        <StackPanel Orientation="Vertical">
                            <Label x:Name="TabCaption" 
                               Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Header, NotifyOnTargetUpdated=True}"
                               Padding="2 3"
                               />
                            <!-- //NOTE: TextBlock does not underline accelerators (which is desired here) -->
                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Content.Subtitle, FallbackValue='Untitled'}" Padding="2 2" FontStyle="Italic" FontSize="10"/>
                        </StackPanel>

                        <!-- ╳ ⛌ ⛒ ❌ ⨯ ×  ➕ -->

                        <Button x:Name="btnDeleteTab" 
                                Content="⨯" 
                                ToolTip="Close tab"
                                Margin="3 0 0 0"
                                Command="{x:Static local:MainWindow.CloseTabCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=.}" 
                                IsTabStop="False"
                                VerticalAlignment="Top"
                                >

                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="0 1 0 0"
                                            Padding="4 2"
                                            BorderThickness="0"
                                            CornerRadius="2"
                                            >

                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="False"/>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=IsMouseOver}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </MultiDataTrigger>

                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                                                    </Trigger>

                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <ContentPresenter VerticalAlignment="Center"/>

                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                </DataTemplate>
            </TabControl.Resources>

            <TabItem x:Name="tabInitial" Header="Regex 1" HeaderTemplate="{StaticResource TabTemplate}" d:IsSelected="True">

            </TabItem>

            <TabItem Header="Regex 2" HeaderTemplate="{StaticResource TabTemplate}" Visibility="Collapsed" d:Visibility="Visible">

            </TabItem>

            <TabItem x:Name="tabItemNew" Header="[NEW]">
                <TabItem.Template>
                    <ControlTemplate TargetType="TabItem">
                        <Border>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="1 1 1 0"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <!--<Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=IsSelected}" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>-->
                                </Style>
                            </Border.Style>

                            <Button x:Name="btnNewTab" 
                                    Content="➕"
                                    ToolTip="New tab"
                                    Margin="5 4"
                                    Padding="5 1"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    IsTabStop="False" 
                                    HorizontalContentAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Width="33"
                                    Command="{x:Static local:MainWindow.NewTabCommand}"
                                    >
                                <Button.Resources>
                                    <sys:Int32 x:Key="Radius">4</sys:Int32>
                                </Button.Resources>
                                <Button.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding Path="ActualWidth"  RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Source="{StaticResource Radius}"/>
                                    </MultiBinding>
                                </Button.Clip>
                            </Button>
                        </Border>
                    </ControlTemplate>
                </TabItem.Template>

                <Button Content="Add New Tab" 
                        Margin="10,14,0,0" 
                        Padding="19 5" 
                        Width="Auto" 
                        Height="Auto" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                        Command="{x:Static local:MainWindow.NewTabCommand}" />
            </TabItem>
        </TabControl>
    </Grid>

</Window>
